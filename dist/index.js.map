{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport { globSync } from 'glob';\nimport { PluginContext } from 'rollup';\nimport { minify } from 'html-minifier-terser';\nimport Handlebars from 'handlebars';\n\ninterface Options {\n    minify?: boolean;\n    context?: any;\n}\n\nfunction copyPlugin(src: string | string[], opts?: Options) {\n    const changedFiles: Set<string> = new Set();\n    const watchedFiles: Set<string> = new Set();\n    let isFirstBuild = true;\n\n    const minifyContent = (content: string) => {\n        return minify(content, {\n            collapseWhitespace: true,\n            removeComments: true,\n            minifyCSS: true,\n            minifyJS: true,\n        });\n    };\n\n    async function emitFileFromPath(this: PluginContext, filePath: string, opts?: Options) {\n        const parts = filePath.split(path.sep)[0];\n        const destPath = path.relative(parts, filePath) || path.basename(filePath);\n        const ext = path.extname(filePath).toLowerCase();\n        let source: string | Buffer;\n\n        if (ext === '.html') {\n            if (opts?.context) {\n                const compiledHtml = Handlebars.compile(fs.readFileSync(filePath, 'utf8'))(opts?.context);\n                if (opts?.minify) {\n                    source = await minifyContent(compiledHtml);\n                } else {\n                    source = compiledHtml;\n                }\n            } else {\n                if (opts?.minify) {\n                    source = await minifyContent(fs.readFileSync(filePath, 'utf8'));\n                } else {\n                    source = fs.readFileSync(filePath, 'utf8');\n                }\n            }\n        } else if (['.css', '.json'].includes(ext)) {\n            if (opts?.minify) {\n                source = await minifyContent(fs.readFileSync(filePath, 'utf8'));\n            } else {\n                source = fs.readFileSync(filePath, 'utf8');\n            }\n        } else {\n            source = fs.readFileSync(filePath);\n        }\n\n        this.emitFile({\n            type: 'asset',\n            fileName: destPath,\n            source,\n        });\n    }\n\n    const files = globSync(src, { nodir: true });\n\n    return {\n        name: 'copy-plugin',\n        buildStart() {\n            files.forEach(file => {\n                this.addWatchFile(file);\n                watchedFiles.add(file);\n\n                if (isFirstBuild) {\n                    emitFileFromPath.call(this, file, opts);\n                }\n            });\n\n            isFirstBuild = false;\n        },\n        watchChange(id: string) {\n            if (watchedFiles.has(id)) {\n                changedFiles.add(id);\n            }\n        },\n        buildEnd() {\n            // console.log('changedFiles', changedFiles);\n            changedFiles.forEach(file => {\n                emitFileFromPath.call(this, file, opts);\n            });\n            changedFiles.clear();\n        },\n    };\n}\n\nexport default copyPlugin;\n"]}